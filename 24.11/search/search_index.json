{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>This document describes the output specification for the ONT suite of products in a readable format.</p> <p>Parsable formats are available in the repository.</p>"},{"location":"minknow/batching/","title":"Batching","text":"<p>Output from ONT products can be batched in various ways, depending on the software used to generate the files.</p>"},{"location":"minknow/batching/#minknow-configuration","title":"MinKNOW Configuration","text":""},{"location":"minknow/batching/#ui","title":"UI","text":"<p>The UI for MinKNOW allows configuring the batching for bam and fastq based on \"Time elapsed\" and \"Read count\".</p>"},{"location":"minknow/batching/#default-values","title":"Default values","text":"<p>The <code>default_writer.toml</code> file in <code>&lt;minknow_install_dir&gt;/conf/package/shared/default_writer.toml</code> contains default batching parameters, and allows additional control on top of what the UI provides.</p>"},{"location":"minknow/batching/#file-format-configuration-locations","title":"File format configuration locations","text":"<p>In the <code>default_writer.toml</code> config file batching for pod5 and fast5 can be controlled:</p> File Type Config Location Pod5 <code>[writer_configuration.read_pod5]</code> Fast5 <code>[writer_configuration.read_fast5]</code>"},{"location":"minknow/batching/#batching-examples","title":"Batching Examples","text":"<p>The following examples can be used to replace existing batching options for a file format, to change how a file type is batched.</p>"},{"location":"minknow/batching/#batch-based-on-read-count","title":"Batch based on read count","text":"<pre><code>batch_duration = \"0s\"               # Time based batching disabled\nbatch_count = 4000                  # How many reads in each file\n</code></pre>"},{"location":"minknow/batching/#batch-into-hourly-files-or-500-million-bases-whichever-comes-first","title":"Batch into hourly files, or 500 million bases, whichever comes first","text":"<pre><code>batch_duration = \"3600s\"            # Time based batch duration\nbases_per_batch = 500_000_000       # Batch based on estimated base output\n</code></pre>"},{"location":"minknow/batching/#batch-into-hourly-files","title":"Batch into hourly files","text":"<pre><code>batch_duration = \"3600s\"            # Time based batch duration\nno_output_based_batching = {}       # Disable output based batching\n</code></pre>"},{"location":"minknow/batching/#batch-into-1-giga-base-files","title":"Batch into 1 giga base files","text":"<pre><code>bases_per_batch = 1_000_000_000     # Batch based on estimated base output\n</code></pre>"},{"location":"minknow/patterns/","title":"Patterns","text":"<p>A pattern is a token replaced by the true value at program runtime. These patterns are used to describe where files will be placed.</p> <p>Patterns are used to construct file names and header values in the specification for all file formats. See Bam for an example.</p>"},{"location":"minknow/patterns/#available-patterns","title":"Available Patterns","text":""},{"location":"minknow/patterns/#global","title":"Global","text":"<p>These patterns are available in all contexts:</p> Regex <code>[A-F0-9]+</code> Examples <code>433146BC99436123</code> <code>123455434</code> <p>An internal identifier for the ASIC on the flow cell or Flongle adapter</p> Regex <code>[A-Z0-9-]+</code> Examples <code>FXX12345</code> <code>PXX12345</code> <code>AAA123</code> <p>Unique identifier printed onto the flow cell, potentially entered by the user.</p> Regex <code>[A-Za-z0-9-_]+</code> Examples <code>my-sequencer</code> <code>GXB12345</code> <code>PCA100090</code> <p>An identifier for the machine MinKNOW is running on. For Oxford Nanopore devices like GridIONs or PromethIONs, this is the serial number printed on the device. For customer-supplied computers, this is the hostname.</p> Regex <code>[A-Za-z0-9-_]+</code> Examples <code>X1</code> <code>MN12345</code> <code>1A</code> <code>P2S-12345-A</code> <p>Identifier for the flow cell position which ran the experiment.</p> Regex <code>[0-9]+\\.[0-9]+\\.[0-9]+(\\.[0-9]+)?(~.+)?</code> Examples <code>1.2.3</code> <code>1.2.3~rc1</code> <p>Version information for the software component that is writing the file.</p> Regex <code>[a-zA-Z0-9_\\.-]+</code> Examples <code>My_Sample</code> <code>my-sample-1</code> <p>A user-supplied identifier for the library running in the protocol</p> Regex <code>[a-zA-Z0-9_\\.-]+</code> Examples <code>My_Group</code> <code>my-group-1</code> <p>A user-supplied identifier for a group of protocols</p> Regex <code>[0-9]{8}_[0-9]{4}</code> Examples <code>20240103_1424</code> <p>The time acquisition started, formatted as <code>:%Y%m%d_%H%M</code>.</p> Regex <code>[0-9a-f]{40}</code> Examples <code>de9f2c7fd25e1b3afad3e85a0bd17d9b100db4b3</code> <p>The full run id for the running acquisition.</p> Regex <code>[0-9a-f]{8}</code> Examples <code>de9f2c7f</code> <p>The first 8 characters of the full <code>run_id</code>.</p> Regex <code>[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}</code> Examples <code>acde070d-8c4c-4f0d-9d8a-162843c10333</code> <p>The full protocol run id for the running protocol.</p> Regex <code>[0-9a-f]{8}</code> Examples <code>acde070d</code> <p>The first 8 characters of the <code>protocol_run_id</code>.</p> Regex <code>[a-zA-Z0-9_]+</code> Examples <code>sequencing_run</code> <p>The purpose of the running protocol.</p>"},{"location":"minknow/patterns/#asic_id","title":"<code>asic_id</code>","text":""},{"location":"minknow/patterns/#flow_cell_id","title":"<code>flow_cell_id</code>","text":""},{"location":"minknow/patterns/#machine_id","title":"<code>machine_id</code>","text":""},{"location":"minknow/patterns/#device_id","title":"<code>device_id</code>","text":""},{"location":"minknow/patterns/#version_string","title":"<code>version_string</code>","text":""},{"location":"minknow/patterns/#sample_id","title":"<code>sample_id</code>","text":""},{"location":"minknow/patterns/#protocol_group_id","title":"<code>protocol_group_id</code>","text":""},{"location":"minknow/patterns/#daq_start_time","title":"<code>daq_start_time</code>","text":""},{"location":"minknow/patterns/#run_id","title":"<code>run_id</code>","text":""},{"location":"minknow/patterns/#short_run_id","title":"<code>short_run_id</code>","text":""},{"location":"minknow/patterns/#protocol_run_id","title":"<code>protocol_run_id</code>","text":""},{"location":"minknow/patterns/#short_protocol_run_id","title":"<code>short_protocol_run_id</code>","text":""},{"location":"minknow/patterns/#protocol_purpose","title":"<code>protocol_purpose</code>","text":""},{"location":"minknow/patterns/#read","title":"Read","text":"<p>These patterns are available when processing a read:</p> Regex <code>[0-9]+</code> Examples <code>0</code> <code>1</code> <code>4000</code> <p>The index of the file or folder being generated, allowing a set of sequential files or folders to be output, eg: '0', '1', '2'...</p> Regex <code>[a-zA-Z0-9_]+</code> Examples <code>positive_control</code> <p>The type of the data the read's associated barcode is related to (one of: <code>test_sample</code>, <code>positive_control</code>, <code>negative_control</code>, <code>no_template_control</code>, <code>positive_control_1</code>, <code>positive_control_2</code>)</p> Regex <code>[a-zA-Z0-9_\\.-]+</code> Examples <code>My_Sample_Alias</code> <code>my-sample-alias-1</code> <p>The user-supplied alias for the read's associated barcode</p> Regex <code>[a-z0-9_@\\.]+</code> Examples <code>rna004_130bps_fast@v5.1.0</code> <p>A unique identifier for the basecall model used in the protocol.</p> Regex <code>skip|</code> Examples <code>skip</code> <code></code> <p><code>skip</code> if the read has skipped basecalling, ```` otherwise</p> Regex <code>pass|fail|skip</code> Examples <code>pass</code> <code>fail</code> <code>skip</code> <p><code>pass</code>, <code>fail</code> or <code>skip</code> depending on the basecall status of the read</p> Regex <code>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(Z|[\\+-]\\d{2}:\\d{2})?</code> Examples <code>2025-01-13T10:45:28.681306+00:00</code> <code>2016-01-19T15:21:32.59+02:00</code> <p>The read start time as an RFC 3339 string</p> Regex <code>[a-zA-Z0-9_\\.]+</code> Examples <code>r9.4.1</code> <code>r10.4.1</code> <code>not_set</code> <p>The type of the pore in use for this read</p> Regex <code>[0-9]+</code> Examples <code>1</code> <code>512</code> <code>3000</code> <p>The 1 indexed number for the channel the read was sequenced on</p> Regex <code>[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}</code> Examples <code>acde070d-8c4c-4f0d-9d8a-162843c10333</code> <p>A unique UUID for the sequenced read (unique even if the read was split in the basecaller)</p> Regex <code>[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}</code> Examples <code>acde070d-8c4c-4f0d-9d8a-162843c10333</code> <p>A unique UUID for the read sent into the basecaller, potentially duplicated if split in basecaller</p>"},{"location":"minknow/patterns/#batch_number","title":"<code>batch_number</code>","text":""},{"location":"minknow/patterns/#type","title":"<code>type</code>","text":""},{"location":"minknow/patterns/#alias","title":"<code>alias</code>","text":""},{"location":"minknow/patterns/#basecall_model_version_id","title":"<code>basecall_model_version_id</code>","text":""},{"location":"minknow/patterns/#basecall_status_skip_or_empty","title":"<code>basecall_status_skip_or_empty</code>","text":""},{"location":"minknow/patterns/#basecall_status","title":"<code>basecall_status</code>","text":""},{"location":"minknow/patterns/#read_start_time","title":"<code>read_start_time</code>","text":""},{"location":"minknow/patterns/#pore_type","title":"<code>pore_type</code>","text":""},{"location":"minknow/patterns/#channel_name","title":"<code>channel_name</code>","text":""},{"location":"minknow/patterns/#read_id","title":"<code>read_id</code>","text":""},{"location":"minknow/patterns/#parent_read_id","title":"<code>parent_read_id</code>","text":""},{"location":"minknow/support/","title":"MinKNOW","text":"<p>MinKNOW supports outputting reads as either raw or basecalled data. The following sections describe the different formats and how to use them.</p>"},{"location":"minknow/support/#raw-output-formats","title":"Raw Output Formats","text":"Format Supported Default Generation time Pod5 \u2713 \u2713 As batch is filled, during acquisition and basecalling catchup Fast5 \u2713 <p>Deprecated</p> \u2717 As batch is filled, during acquisition and basecalling catchup"},{"location":"minknow/support/#basecalled-output-formats","title":"Basecalled Output Formats","text":"Format Supported Default Generation time Bam \u2713 \u2717 As batch is filled, during acquisition and basecalling catchup Fastq \u2713 \u2713 As batch is filled, during acquisition and basecalling catchup"},{"location":"minknow/support/#other-data-formats","title":"Other data formats","text":"<p>These formats are output by MinKNOW by default, and are not configurable.</p> Format Generation time Sequencing Summary End of sequencing acquisition and basecalling catchup period Sample Sheet End of sequencing acquisition and basecalling catchup period"},{"location":"protocol_formats/sample_sheet/","title":"Sample Sheet","text":"<p>Sample sheets are used in multiple ways inside MinKNOW, either as a way to configure a sequencing run, or as a document of the configuration of the sequencing run.</p>"},{"location":"protocol_formats/sample_sheet/#output-columns","title":"Output Columns","text":"<p>The following fields document fields minknow will write at the end of a sequencing run.</p> Regex <code>[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}</code> Required  Examples <code>e4994c62-93f9-439a-bc8f-d20c95a137a5</code> <p>A random-generated uuid for the sequencing protocol (eg: e4994c62-93f9-439a-bc8f-d20c95a137a5) This consists only of lower-case ASCII letters (a-z), digits (0-9) and dashes (-).</p> Regex <code>[A-Z-0-9]+</code> Required  Examples <code>MN12345</code> <p>The device identifier used for sequencing.</p> Regex <code>[A-Z0-9-]+</code> Required  Common fields <code>Fastq: flow_cell_id</code><code>Bam: PU</code> Examples <code>FXX12345</code> <code>PXX12345</code> <code>AAA123</code> <p>The human-readable identifier for the flow cell (eg: FAK54854).</p> Regex <code>[a-zA-Z0-9_\\.-]+</code> Required  Common fields <code>Fastq: sample_id</code><code>Bam: LB</code><code>Sequencing Summary: sample_id</code> Examples <code>My_Sample</code> <code>my-sample-1</code> <p>Set by the user in the GUI as \"Sample ID\".</p> Regex <code>[a-zA-Z0-9_\\.-]+</code> Required  Examples <code>My_Group</code> <code>my-group-1</code> <p>Set by the user in the GUI as \"Experiment ID\".</p> Regex <code>[A-Z0-9-]+</code> Required  Examples <code>FLO-PRO114</code> <code>FLO-MIN114</code> <p>The product code of the flow cell used in the experiment</p> Regex <code>|[A-Z0-9-]+</code> Required  Examples <code>SQK-LSK114</code> <p>The product code of the kit used in the experiment</p> Regex <code>barcode([0-9]+)</code> Required  Only When <code>has_input_sample_sheet</code> Common fields <code>Fastq: barcode</code><code>Bam: SM</code><code>Sequencing Summary: barcode_arrangement</code> Examples <code>barcode01</code> <p>The barcode identified for the read.</p> Regex <code>[A-Za-z0-9\\-_\\.]+</code> Required  Only When <code>has_input_sample_sheet</code> Common fields <code>Fastq: barcode_alias</code><code>Bam: al</code><code>Sequencing Summary: alias</code> Examples <code>my_sample</code> <code>sample01</code> <p>User specicied identifier used for the barcode, if available, otherwise the arrangement name.</p> Regex <code>na|test_sample|positive_control|negative_control|no_template_control|positive_control_1|positive_control_2</code> Required  Only When <code>has_input_sample_sheet</code> Examples <code>positive_control</code> <code>no_template_control</code> <p>The user specified type of the barcode, or \"na\", if not available.</p>"},{"location":"protocol_formats/sample_sheet/#protocol_run_id","title":"<code>protocol_run_id</code>","text":""},{"location":"protocol_formats/sample_sheet/#position_id","title":"<code>position_id</code>","text":""},{"location":"protocol_formats/sample_sheet/#flow_cell_id","title":"<code>flow_cell_id</code>","text":""},{"location":"protocol_formats/sample_sheet/#sample_id","title":"<code>sample_id</code>","text":""},{"location":"protocol_formats/sample_sheet/#experiment_id","title":"<code>experiment_id</code>","text":""},{"location":"protocol_formats/sample_sheet/#flow_cell_product_code","title":"<code>flow_cell_product_code</code>","text":""},{"location":"protocol_formats/sample_sheet/#kit","title":"<code>kit</code>","text":""},{"location":"protocol_formats/sample_sheet/#barcode","title":"<code>barcode</code>","text":""},{"location":"protocol_formats/sample_sheet/#alias","title":"<code>alias</code>","text":""},{"location":"protocol_formats/sample_sheet/#type","title":"<code>type</code>","text":""},{"location":"protocol_formats/sample_sheet/#input-columns","title":"Input Columns","text":"<p>When passing a sample sheet into MinKNOW, different rules apply to the columns - not all are required.</p> Column Notes <code>flow_cell_id</code> Optional if <code>position_id</code> is specified and the flow cell has <code>flow_cell_id</code> on the EEPROM. Used to identify which position to apply values to. <code>position_id</code> Optional if <code>flow_cell_id</code> is specified. Used to identify which position to apply values to. <code>sample_id</code> Optional. An individual position can only have one sample_id assigned to it when starting a run. <code>experiment_id</code> Each row in the sample sheet must contain an experiment_id. <code>flow_cell_product_code</code> Required if the product code is not available on the EEPROM. Used to find the correct protocol to start. <code>kit</code> Required Kit is used to find a protocol to start."},{"location":"protocol_formats/sample_sheet/#notes","title":"Notes","text":"<p>If <code>position_id</code> and <code>flow_cell_id</code> are both defined the flow_cell_id will be validated against the EEPROM value. <code>flow_cell_id</code> will be set against the <code>user_specified_flow_cell_id</code> when starting a protocol.</p> <p>All rows must contain the same <code>experiment_id</code> value, therefore, the sample sheet will only have a single <code>experiment_id</code> defined overall but the entries on each row are validated.</p> <p>If expansions kits are additionally defined they should be space separated, eg: <code>SQK-LSK109 EXP-NBD104 EXP-NBD114</code> or <code>OND-SQK-LP0096S</code>. The sample sheet must contain exactly one sequencing kit, but can contain 0, 1, or many, expansion kits. The sequencing kit must be specified before any expansion kits.</p>"},{"location":"protocol_formats/sequencing_summary/","title":"Sequencing Summary","text":"<p>The sequencing summary is tsv file, containing one row per read. It is intended to allow fast analysis of the results of a sequencing run.</p>"},{"location":"protocol_formats/sequencing_summary/#columns","title":"Columns","text":"Regex <code>[A-Za-z0-9\\-_\\.]+</code> Required  Only When <code>online</code> Examples <code>PBC012345_pass_unclassified_2abce119_646d7417_0.fastq.gz</code> <code>PBC012345_fail_2abce119_646d7417_0.fastq.gz</code> <p>The name of the fastq file that contains this read.</p> Regex <code>[A-Za-z0-9\\-_\\.]+</code> Required  Only When <code>online</code> Examples <code>PBC012345_pass_unclassified_2abce119_646d7417_0.fast5</code> <code>PBC012345_fail_unclassified_2abce119_646d7417_0.fast5</code> <code>PBC012345_fail_2abce119_646d7417_0.fast5</code> <p>The name of the fast5 file that contains this read.</p> Regex <code>[A-Za-z0-9\\-_\\.]+</code> Required  Only When <code>online</code> Examples <code>PBC012345_pass_unclassified_2abce119_646d7417_0.pod5</code> <code>PBC012345_fail_2abce119_646d7417_0.pod5</code> <p>The name of the pod5 file that contains this read.</p> Regex <code>[A-Za-z0-9\\-_\\.]+</code> Required  Only When <code>online</code> Examples <code>PBC012345_pass_unclassified_2abce119_646d7417_0.bam</code> <code>PBC012345_fail_2abce119_646d7417_0.bam</code> <p>The name of the bam file that contains this read.</p> Regex <code>[A-Za-z0-9\\-_\\.]+</code> Required  Only When <code>offline</code> Examples <code>PBC012345_pass_unclassified_2abce119_646d7417_0.pod5</code> <code>PBC012345_fail_2abce119_646d7417_0.fast5</code> <p>The name of the input fast5 or pod5 file.</p> Regex <code>[0-9]+</code> Required  Only When <code>offline</code> Examples <code>1</code> <code>512</code> <code>3000</code> <p>Identifies the batch of reads this read belongs to.</p> Regex <code>[a-f0-9]{8}-[a-f0-9]{4}-[4-5][a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}</code> Required  Common fields <code>Fastq: parent_read_id</code><code>Bam: pi</code> Examples <code>e4994c62-93f9-439a-bc8f-d20c95a137a5</code> <p>The <code>read_id</code> of the read which was the source of this entry. This may be the same as the read id if no read splitting was performed for this read, or will be a new globally unique UUID value if this read was split out of another read by the basecaller.</p> Regex <code>[a-f0-9]{8}-[a-f0-9]{4}-[4-5][a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}</code> Required  Examples <code>e4994c62-93f9-439a-bc8f-d20c95a137a5</code> <p>A unique UUID for the sequenced read.</p> Regex <code>[a-f0-9]{40}</code> Required  Common fields <code>Fastq: runid</code><code>Bam: DS</code> Examples <code>053d86cd5a212b3224c93df4d1e4f5f388b85a22</code> <p>The unique run identifier for the sequencing run.</p> Regex <code>[0-9]+</code> Required  Common fields <code>Fastq: ch</code><code>Bam: ch</code> Examples <code>1</code> <code>512</code> <code>3000</code> <p>The 1 indexed number for the channel the read was sequenced on.</p> Regex <code>1|2|3|4</code> Required  Examples <code>1</code> <p>The 1 indexed number for the mux the read was sequenced on.</p> Regex <code>[0-9]+</code> Required  Examples <code>4323</code> <p>The number of events detected by MinKNOW for this read.</p> Regex <code>[0-9]+\\.[0-9]+</code> Required  Common fields <code>Fastq: start_time</code><code>Bam: st</code> Examples <code>10.4</code> <p>The time the read started in seconds from the start of the run.</p> Regex <code>[0-9]+\\.[0-9]+</code> Required  Examples <code>5.4</code> <p>The duration of the read in seconds.</p> Regex <code>TRUE|FALSE</code> Required  Only When <code>basecalling</code> Examples <code>TRUE</code> <code>FALSE</code> <p>Whether the read passed any filtering steps performed.</p> Regex <code>[0-9]+\\.[0-9]+</code> Required  Only When <code>basecalling</code> Examples <code>10.7</code> <p>The start time of the template read in seconds from the start of the run.</p> Regex <code>[0-9]+</code> Required  Only When <code>basecalling</code> Examples <code>1000</code> <p>The number of events detected by the basecaller for the template read.</p> Regex <code>[0-9]+\\.[0-9]+</code> Required  Only When <code>basecalling</code> Examples <code>100.3</code> <p>The duration of the template read in seconds.</p> Regex <code>[0-9]+</code> Required  Only When <code>basecalling</code> Examples <code>6734</code> <p>The length of the template read in bases.</p> Regex <code>[0-9]+\\.[0-9]+</code> Required  Only When <code>basecalling</code> Examples <code>20.4</code> <p>The mean qscore of the template read.</p> Regex <code>-?[0-9]+\\.[0-9]+</code> Required  Only When <code>basecalling</code> Examples <code>20.4</code> <code>-20.4</code> <p>The median of the read signal</p> Regex <code>[0-9]+\\.[0-9]+</code> Required  Only When <code>basecalling</code> Examples <code>20.4</code> <p>The maximum absolute deviation of the read signal</p> Regex <code>-1|[0-9]+</code> Required  Only When <code>poly_a_tail_estimation</code> Examples <code>-1</code> <code>100</code> <p>The length of the poly-A tail detected in the read.</p> Regex <code>[a-zA-Z0-9_\\.]+</code> Required  Examples <code>r9.4.1</code> <code>r10.4.1</code> <code>not_set</code> <p>The type of the pore in use for this read.</p> Regex <code>[A-Za-z0-9\\-_\\.]+</code> Required  Examples <code>My_Group</code> <code>my-group-1</code> <p>The user specified identifier for the group of sequencing runs.</p> Regex <code>[A-Za-z0-9\\-_\\.]+</code> Required  Common fields <code>Fastq: sample_id</code><code>Bam: LB</code><code>Sample Sheet: sample_id</code> Examples <code>My_Sample</code> <code>my-sample-1</code> <p>The user specified identifier for the sequencing run.</p> Regex <code>unknown|signal_positive|signal_negative|mux_change|unblock_mux_change|data_service_unblock_mux_change|analysis_config_change|device_data_error|api_request</code> Required  Examples <code>signal_positive</code> <code>signal_negative</code> <p>The reason the read ended.</p> Regex <code>unclassified|[A-Za-z0-9\\-_\\.]+</code> Required  Only When <code>barcoding</code> Common fields <code>Fastq: barcode_alias</code><code>Bam: al</code><code>Sample Sheet: alias</code> Examples <code>unclassified</code> <code>my_sample</code> <code>sample01</code> <p>The user-supplied alias for the barcode.</p> Regex <code>na|test_sample|positive_control|negative_control|no_template_control|positive_control_1|positive_control_2</code> Required  Only When <code>barcoding</code> Examples <code>test_sample</code> <code>positive_control</code> <p>The type of the data the read's associated barcode is related to.</p> Regex <code>-|unclassified|[A-Za-z0-9\\-_\\.]+</code> Required  Only When <code>barcoding</code> Common fields <code>Fastq: barcode</code><code>Bam: SM</code><code>Sample Sheet: barcode</code> Examples <code>-</code> <code>barcode01</code> <code>unclassified</code> <p>The barcode identified for the read. If barcoding was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|[A-Za-z0-9\\-_\\.]+</code> Required  Only When <code>barcoding</code> Examples <code>-</code> <code>SQK-NDB114-96</code> <p>The kit used for barcoding. If barcoding was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|n/a|var1|var2</code> Required  Only When <code>barcoding</code> Examples <code>-</code> <code>n/a</code> <code>var1</code> <code>var2</code> <p>The arrangement variant of the found barcode. If barcoding was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|-?[0-9]+\\.[0-9]+</code> Required  Only When <code>barcoding</code> Examples <code>-</code> <code>1.0</code> <p>The overall quality score given to the barcode detected. If barcoding was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|-?[0-9]+\\.[0-9]+</code> Required  Only When <code>barcoding</code> Examples <code>-</code> <code>1.0</code> <p>The quality score given to the front barcode detected. If barcoding was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|[0-9]+</code> Required  Only When <code>barcoding</code> Examples <code>-</code> <code>20</code> <p>The length of the front barcode found. If barcoding was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|[0-9]+</code> Required  Only When <code>barcoding</code> Examples <code>-</code> <code>0</code> <p>The base index in the sequence the front barcode began. If barcoding was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|-?[0-9]+\\.[0-9]+</code> Required  Only When <code>barcoding</code> Examples <code>-</code> <code>1.0</code> <p>The quality score given to the read barcode detected. If barcoding was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|[0-9]+</code> Required  Only When <code>barcoding</code> Examples <code>-</code> <code>10</code> <p>The length of the rear barcode found. If barcoding was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|[0-9]+</code> Required  Only When <code>barcoding</code> Examples <code>-</code> <code>0</code> <p>The base index in the sequence the front barcode began. If barcoding was not performed for the read a value of <code>-</code> is used.</p> Regex <code>\\+|-|\\*|[A-Za-z0-9\\-_\\.]+</code> Required  Only When <code>aligning</code> Examples <code>-</code> <code>Lambda</code> <p>The genome the read was aligned to. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>\\+|-|\\*</code> Required  Only When <code>aligning</code> Examples <code>-</code> <code>+</code> <code>*</code> <p>The direction of the alignment. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|[0-9]+</code> Required  Only When <code>aligning</code> Examples <code>0</code> <p>The start position of the alignment on the genome. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|[0-9]+</code> Required  Only When <code>aligning</code> Examples <code>-</code> <code>100</code> <p>The end position of the alignment on the genome. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|[0-9]+</code> Required  Only When <code>aligning</code> Examples <code>-</code> <code>0</code> <p>The start position of the alignment on the strand. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|[0-9]+</code> Required  Only When <code>aligning</code> Examples <code>-</code> <code>100</code> <p>The end position of the alignment on the strand. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|-1|[0-9]+</code> Required  Only When <code>aligning</code> Examples <code>-</code> <code>4</code> <p>The number of insertions in the alignment. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|-1|[0-9]+</code> Required  Only When <code>aligning</code> Examples <code>-</code> <code>1</code> <p>The number of deletions in the alignment. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|-1|[0-9]+</code> Required  Only When <code>aligning</code> Examples <code>-</code> <code>100</code> <p>The number of aligned bases in the alignment. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|-1|[0-9]+</code> Required  Only When <code>aligning</code> Examples <code>-</code> <code>100</code> <p>The number of correct bases in the alignment. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|-?[0-9]+\\.[0-9]+</code> Required  Only When <code>aligning</code> Examples <code>-</code> <code>0.99</code> <p>The identity score of the alignment. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|-?[0-9]+\\.[0-9]+</code> Required  Only When <code>aligning</code> Examples <code>-</code> <code>0.99</code> <p>The accuracy of the alignment. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|-?[0-9]+</code> Required  Only When <code>aligning</code> Examples <code>-</code> <code>4</code> <p>The score assigned to the alignment. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|-?[0-9]+\\.[0-9]+</code> Required  Only When <code>aligning</code> Examples <code>-</code> <code>0.99</code> <p>The coverage of the alignment. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|[0-9]+</code> Required  Only When <code>aligning</code> Examples <code>-</code> <code>1</code> <p>The number of hits in the alignment bed file. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|[0-9]+</code> Required  Only When <code>aligning</code> Examples <code>-</code> <code>1</code> <p>The mapping quality of the alignment. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|[0-9]+</code> Required  Only When <code>aligning</code> Examples <code>-</code> <code>1</code> <p>The number of alignments found for the read. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|[0-9]+</code> Required  Only When <code>aligning</code> Examples <code>-</code> <code>2</code> <p>The number of secondary alignments found for the read. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|[0-9]+</code> Required  Only When <code>aligning</code> Examples <code>-</code> <code>3</code> <p>The number of supplementary alignments found for the read. If alignment was not performed for the read a value of <code>-</code> is used.</p> Regex <code>-|[a-f0-9]{8}-[a-f0-9]{4}-[4-5][a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}</code> Required  Only When <code>duplex</code> Examples <code>e4994c62-93f9-439a-bc8f-d20c95a137a5</code> <p>The parent read id of the template read.</p> Regex <code>-|[a-f0-9]{8}-[a-f0-9]{4}-[4-5][a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}</code> Required  Only When <code>duplex</code> Examples <code>e4994c62-93f9-439a-bc8f-d20c95a137a5</code> <p>The parent read id of the complement read.</p>"},{"location":"protocol_formats/sequencing_summary/#filename_fastq","title":"<code>filename_fastq</code>","text":""},{"location":"protocol_formats/sequencing_summary/#filename_fast5","title":"<code>filename_fast5</code>","text":""},{"location":"protocol_formats/sequencing_summary/#filename_pod5","title":"<code>filename_pod5</code>","text":""},{"location":"protocol_formats/sequencing_summary/#filename_bam","title":"<code>filename_bam</code>","text":""},{"location":"protocol_formats/sequencing_summary/#input_filename","title":"<code>input_filename</code>","text":""},{"location":"protocol_formats/sequencing_summary/#batch_id","title":"<code>batch_id</code>","text":""},{"location":"protocol_formats/sequencing_summary/#parent_read_id","title":"<code>parent_read_id</code>","text":""},{"location":"protocol_formats/sequencing_summary/#read_id","title":"<code>read_id</code>","text":""},{"location":"protocol_formats/sequencing_summary/#run_id","title":"<code>run_id</code>","text":""},{"location":"protocol_formats/sequencing_summary/#channel","title":"<code>channel</code>","text":""},{"location":"protocol_formats/sequencing_summary/#mux","title":"<code>mux</code>","text":""},{"location":"protocol_formats/sequencing_summary/#minknow_events","title":"<code>minknow_events</code>","text":""},{"location":"protocol_formats/sequencing_summary/#start_time","title":"<code>start_time</code>","text":""},{"location":"protocol_formats/sequencing_summary/#duration","title":"<code>duration</code>","text":""},{"location":"protocol_formats/sequencing_summary/#passes_filtering","title":"<code>passes_filtering</code>","text":""},{"location":"protocol_formats/sequencing_summary/#template_start","title":"<code>template_start</code>","text":""},{"location":"protocol_formats/sequencing_summary/#num_events_template","title":"<code>num_events_template</code>","text":""},{"location":"protocol_formats/sequencing_summary/#template_duration","title":"<code>template_duration</code>","text":""},{"location":"protocol_formats/sequencing_summary/#sequence_length_template","title":"<code>sequence_length_template</code>","text":""},{"location":"protocol_formats/sequencing_summary/#mean_qscore_template","title":"<code>mean_qscore_template</code>","text":""},{"location":"protocol_formats/sequencing_summary/#median_template","title":"<code>median_template</code>","text":""},{"location":"protocol_formats/sequencing_summary/#mad_template","title":"<code>mad_template</code>","text":""},{"location":"protocol_formats/sequencing_summary/#poly_tail_length","title":"<code>poly_tail_length</code>","text":""},{"location":"protocol_formats/sequencing_summary/#pore_type","title":"<code>pore_type</code>","text":""},{"location":"protocol_formats/sequencing_summary/#experiment_id","title":"<code>experiment_id</code>","text":""},{"location":"protocol_formats/sequencing_summary/#sample_id","title":"<code>sample_id</code>","text":""},{"location":"protocol_formats/sequencing_summary/#end_reason","title":"<code>end_reason</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alias","title":"<code>alias</code>","text":""},{"location":"protocol_formats/sequencing_summary/#type","title":"<code>type</code>","text":""},{"location":"protocol_formats/sequencing_summary/#barcode_arrangement","title":"<code>barcode_arrangement</code>","text":""},{"location":"protocol_formats/sequencing_summary/#barcode_kit","title":"<code>barcode_kit</code>","text":""},{"location":"protocol_formats/sequencing_summary/#barcode_variant","title":"<code>barcode_variant</code>","text":""},{"location":"protocol_formats/sequencing_summary/#barcode_score","title":"<code>barcode_score</code>","text":""},{"location":"protocol_formats/sequencing_summary/#barcode_front_score","title":"<code>barcode_front_score</code>","text":""},{"location":"protocol_formats/sequencing_summary/#barcode_front_foundseq_length","title":"<code>barcode_front_foundseq_length</code>","text":""},{"location":"protocol_formats/sequencing_summary/#barcode_front_begin_index","title":"<code>barcode_front_begin_index</code>","text":""},{"location":"protocol_formats/sequencing_summary/#barcode_rear_score","title":"<code>barcode_rear_score</code>","text":""},{"location":"protocol_formats/sequencing_summary/#barcode_rear_foundseq_length","title":"<code>barcode_rear_foundseq_length</code>","text":""},{"location":"protocol_formats/sequencing_summary/#barcode_rear_end_index","title":"<code>barcode_rear_end_index</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_genome","title":"<code>alignment_genome</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_direction","title":"<code>alignment_direction</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_genome_start","title":"<code>alignment_genome_start</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_genome_end","title":"<code>alignment_genome_end</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_strand_start","title":"<code>alignment_strand_start</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_strand_end","title":"<code>alignment_strand_end</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_num_insertions","title":"<code>alignment_num_insertions</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_num_deletions","title":"<code>alignment_num_deletions</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_num_aligned","title":"<code>alignment_num_aligned</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_num_correct","title":"<code>alignment_num_correct</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_identity","title":"<code>alignment_identity</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_accuracy","title":"<code>alignment_accuracy</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_score","title":"<code>alignment_score</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_coverage","title":"<code>alignment_coverage</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_bed_hits","title":"<code>alignment_bed_hits</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_mapping_quality","title":"<code>alignment_mapping_quality</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_num_alignments","title":"<code>alignment_num_alignments</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_num_secondary_alignments","title":"<code>alignment_num_secondary_alignments</code>","text":""},{"location":"protocol_formats/sequencing_summary/#alignment_num_supplementary_alignments","title":"<code>alignment_num_supplementary_alignments</code>","text":""},{"location":"protocol_formats/sequencing_summary/#duplex_parent_template","title":"<code>duplex_parent_template</code>","text":""},{"location":"protocol_formats/sequencing_summary/#duplex_parent_complement","title":"<code>duplex_parent_complement</code>","text":""},{"location":"read_formats/bam/","title":"Bam Output","text":"<p>Format Version: 0.1</p> <p>Binary Alignment Map (BAM) is the comprehensive raw data of genome sequencing; it consists of the lossless, compressed binary representation of the Sequence Alignment Map-files.</p> <p>Bam files generated by minknow are compliant with the Sam Specification, and can be manipulated using Sam Tools.</p>"},{"location":"read_formats/bam/#paths","title":"Paths","text":"<p>The following path patterns are used to place the data on disk:</p> File Path Pattern Bam File <code>bam{basecall_status}{duplex_status}/{alias}/{flow_cell_id}{basecall_status}{duplex_status}_{alias_}{short_protocol_run_id}_{short_run_id}_{batch_number}.bam</code> Bai File <code>bam{basecall_status}{duplex_status}/{alias}/{flow_cell_id}{basecall_status}{duplex_status}_{alias_}{short_protocol_run_id}_{short_run_id}_{batch_number}.bam.bai</code> <p>See the Patterns documentation for more information on file patterns.</p>"},{"location":"read_formats/bam/#read-batching","title":"Read Batching","text":"<p>The following batching options are used by default:</p> Option Value Duration <code>3600s</code> <p>For more information on batching see Batching.</p>"},{"location":"read_formats/bam/#fields","title":"Fields","text":""},{"location":"read_formats/bam/#read-groups","title":"Read Groups","text":"Regex <code>([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})([a-z0-9@\\.])+(([A-Za-z0-9@\\.]+))?</code> Required  Examples <code>e4994c62-93f9-439a-bc8f-d20c95a137a5_rna004_130bps_fast@v5.1.0_barcode02</code> <code>e4994c62-93f9-439a-bc8f-d20c95a137a5_unknown_barcode02</code> <code>e4994c62-93f9-439a-bc8f-d20c95a137a5_rna004_130bps_fast@v5.1.0_29d8704b</code> <p>A group identifier keyed specifically to a run, basecall model, and barcode (if enabled)</p> <p><code>model_version_id</code> if missing shall be replaced with the text \"unknown\"</p> <p><code>barcode_data::arrangement</code> if missing the suffix will not be appended.</p> Regex <code>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|\\.\\d{6}\\+\\d{2}:\\d{2})</code> Examples <code>2025-01-06T10:06:36.778368+00:00</code> <code>2025-01-06T10:06:36Z</code> <p>The start time of the sequencing run.</p> <p>Correctly formatted as ISO8601.</p> Regex <code>runid=([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})\\s+basecall_model=([a-z0-9_@\\.]+)(\\s+modbase_models=([A-Za-z0-9_@\\.]+))?</code> Required  Common fields <code>Fastq: runid</code><code>Sequencing Summary: run_id</code> Examples <code>runid=e4994c62-93f9-439a-bc8f-d20c95a137a5 basecall_model=rna004_130bps_fast@v5.1.0</code> <code>runid=e4994c62-93f9-439a-bc8f-d20c95a137a5 basecall_model=rna004_130bps_fast@v5.1.0 modbase_models=rna004_130bps_hac@v5.1.0_inosine_m6A@v1</code> <p><code>runid</code>, <code>basecall_model</code> and optionally <code>modbase_models</code> formatted into a space separated string.</p> <p><code>runid</code> contains the <code>protocol_run_id</code> from the minknow experiment that generated the bam files. Note, <code>modbase_models</code> only appears if modbase calling was performed, and contains a comma separated list of dorado modbase model names used.</p> Regex <code>[a-zA-Z0-9_\\.-]+</code> Common fields <code>Fastq: sample_id</code><code>Sequencing Summary: sample_id</code><code>Sample Sheet: sample_id</code> Examples <code>My_Sample</code> <code>my-sample-1</code> <p>The sample library identifier. Included only if data is present.</p> Regex <code>ONT</code> Required  Examples <code>ONT</code> <p>The string \"ONT\".</p> Regex <code>[A-Z-0-9]+</code> Examples <code>MN12345</code> <p>The device identifier used for sequencing.</p> Regex <code>[A-Z0-9-]+</code> Common fields <code>Fastq: flow_cell_id</code><code>Sample Sheet: flow_cell_id</code> Examples <code>FAB12345</code> <p>The unique identifier for the flowcell.</p> Regex <code>barcode([0-9]+)</code> Only When <code>barcoding</code> Common fields <code>Fastq: barcode</code><code>Sequencing Summary: barcode_arrangement</code><code>Sample Sheet: barcode</code> Examples <code>barcode01</code> <p>The barcode identified for the read.</p> <p>Included only if data is present and the arrangement is not \"unclassified\"</p> Regex <code>unclassified|[A-Za-z0-9\\-_\\.]+</code> Only When <code>barcoding</code> Common fields <code>Fastq: barcode_alias</code><code>Sequencing Summary: alias</code><code>Sample Sheet: alias</code> Examples <code>my_sample</code> <code>sample01</code> <p>User specicied identifier used for the barcode, if available, otherwise the arrangement name.</p> <p>Included only if data is present and the arrangement is not \"unclassified\"</p> <p>This will be the same barcode descriptor guppy uses for generating the output folder names, which is the sample sheet alias if available otherwise defaulting to the arrangement name.</p>"},{"location":"read_formats/bam/#id","title":"<code>ID</code>","text":""},{"location":"read_formats/bam/#dt","title":"<code>DT</code>","text":""},{"location":"read_formats/bam/#ds","title":"<code>DS</code>","text":""},{"location":"read_formats/bam/#lb","title":"<code>LB</code>","text":""},{"location":"read_formats/bam/#pl","title":"<code>PL</code>","text":""},{"location":"read_formats/bam/#pm","title":"<code>PM</code>","text":""},{"location":"read_formats/bam/#pu","title":"<code>PU</code>","text":""},{"location":"read_formats/bam/#sm","title":"<code>SM</code>","text":""},{"location":"read_formats/bam/#al","title":"<code>al</code>","text":""},{"location":"read_formats/bam/#program-groups","title":"Program Groups","text":"Regex <code>(basecaller|barcoder|aligner|dorado_aligner|minknow)(_[0-9]+)?</code> Required  Examples <code>aligner_1</code> <code>basecaller</code> <code>dorado_aligner_3</code> <code>minknow</code> <p><code>&lt;program_id&gt;{_&lt;unique_id&gt;}</code></p> <p>The SAM specification requires this field to be unique within a file, and may be modified on merging to ensure uniqueness. Where the program_id would not be unique within the file, e.g. when the input is a bam/sam file with the program_id already present, then the @PG record will have the lowest zero based suffix that can be appended to the ID to ensure its uniqueness, e.g.\u00a0\"_0\". Where an application has used the minimap aligner on reads contained in the file, as well as outputting a @PG record for itself it will also output an\u00a0additional @PG record for minimap dorado aligner records will have the ID \"dorado_aligner\" to disambiguate from minimap aligner records. Programs will identify themselves as follows minknow \"minknow\" ont_basecall_client \"basecaller\" dorado basecaller \"basecaller\" dorado barcoder \"barcoder\" dorado aligner \"dorado_aligner\" minimap2 (if used in the application) \"aligner\"</p> Regex <code>(dorado|minimap2|ont_basecall_client|minknow)</code> Required  Examples <code>dorado</code> <code>minimap2</code> <code>ont_basecall_client</code> <code>minknow</code> <p>\"dorado\" for dorado application program records. \"minimap2\" for minimap program records with ID:aligner. \"ont_basecall_client\", etc.</p> Regex <code>.*</code> Examples <code>dorado basecaller hac pod5s/ &gt; calls.bam</code> <p>Command line of invoked application</p> Regex <code>[0-9a-z.~\\+\\-]+</code> Required  Examples <code>0.9.1</code> <code>5.1.0</code> <code>6.2.0~pre-a7305ca</code> <code>0.0.0.28546+10c25eb94</code> <p> Regex <code>.*</code> Common fields <code>Fastq: basecall_gpu</code> Examples <code>gpu:NVIDIA A100 80GB PCIe</code> <code>gpu:NVIDIA A100 80GB PCIe|Quadro GV100</code> <p>Each GPU type used by the basecaller will appear once, as we\u2019re only interested in the GPU types, not the total number of them. For a PromethION the tag would say (e.g) DS:gpu:NVIDIA A100 80GB PCIe. If there are multiple GPU types on the system they will be separated by a vertical bar. If a GPU was not used, or the reads were called on Apple Silicon, this field will not be present.</p>"},{"location":"read_formats/bam/#id_1","title":"<code>ID</code>","text":""},{"location":"read_formats/bam/#pn","title":"<code>PN</code>","text":""},{"location":"read_formats/bam/#cl","title":"<code>CL</code>","text":""},{"location":"read_formats/bam/#vn","title":"<code>VN</code>","text":""},{"location":"read_formats/bam/#ds_1","title":"<code>DS</code>","text":""},{"location":"read_formats/bam/#read-tags","title":"Read Tags","text":"<p>ID of the read group to which this read belongs. If present its value must match the ID field of a Read Group record in the header section.</p> <p>Read mean basecall qscore</p> <p>read mux meta: read_data::mux</p> Common fields <code>Fastq: start_time</code><code>Sequencing Summary: start_time</code> <p>Read start time metadata field:  <p>fast5 file name read_data::filename. N.B. filename only so any personally identifiable data in the path is not written.</p> <p>sequence to signal move table</p> Common fields <code>Fastq: parent_read_id</code><code>Sequencing Summary: parent_read_id</code> <p>parent read id for a split read</p> Required  Only When <code>modified_bases</code> <p>Length of SEQ field when MM/ML tags were generated.</p> Required  Only When <code>modified_bases</code> <p>Base modification probabilities</p> Required  Only When <code>modified_bases</code> <p>Base modifications / methylation</p> Only When <code>duplex</code> <p>Duplex read indicator. 1 for duplex reads, 0 for simplex reads without duplex offspring, -1 for simplex reads with duplex offspring.</p> Only When <code>bed_file</code> <p>Number of bed-file hits. This tag is only included if a bed-file was specified when aligning.</p>"},{"location":"read_formats/bam/#rgz","title":"<code>RG</code>:Z:","text":""},{"location":"read_formats/bam/#qsf","title":"<code>qs</code>:f:","text":""},{"location":"read_formats/bam/#mxi","title":"<code>mx</code>:i:","text":""},{"location":"read_formats/bam/#stz","title":"<code>st</code>:Z:","text":""},{"location":"read_formats/bam/#f5z","title":"<code>f5</code>:Z:","text":""},{"location":"read_formats/bam/#mvbc","title":"<code>mv</code>:B:c","text":""},{"location":"read_formats/bam/#piz","title":"<code>pi</code>:Z:","text":""},{"location":"read_formats/bam/#mni","title":"<code>MN</code>:i:","text":""},{"location":"read_formats/bam/#mlbc","title":"<code>ML</code>:B:C","text":""},{"location":"read_formats/bam/#mmz","title":"<code>MM</code>:Z:","text":""},{"location":"read_formats/bam/#dxi","title":"<code>dx</code>:i:","text":""},{"location":"read_formats/bam/#bhi","title":"<code>bh</code>:i:","text":""},{"location":"read_formats/fast5/","title":"Fast5 Outputs","text":"<p>Warning</p> <p>This file format is deprecated.</p> <p>FAST5 files are Hierarchical Data Format 5 files, with specific layout for Nanopore data. They are superseded by Pod5.</p>"},{"location":"read_formats/fast5/#paths","title":"Paths","text":"<p>The following path patterns are used to place the data on disk:</p> File Path Pattern Fast5 File <code>fast5{basecall_status}/{alias}/{flow_cell_id}{basecall_status}_{alias_}{short_protocol_run_id}_{short_run_id}_{batch_number}.fast5</code> <p>See the Patterns documentation for more information on file patterns.</p>"},{"location":"read_formats/fast5/#read-batching","title":"Read Batching","text":"<p>The following batching options are used by default:</p> Option Value Read Count <code>4000</code> <p>For more information on batching see Batching.</p>"},{"location":"read_formats/fastq/","title":"Fastq Output","text":"<p>Format Version: 0.1</p> <p>Fastq is a text-based format for storing both a biological sequence (usually nucleotide sequence) and its corresponding quality scores.</p>"},{"location":"read_formats/fastq/#paths","title":"Paths","text":"<p>The following path patterns are used to place the data on disk:</p> File Path Pattern Fastq File <code>fastq{basecall_status}{duplex_status}/{alias}/{flow_cell_id}{basecall_status}{duplex_status}_{alias_}{short_protocol_run_id}_{short_run_id}_{batch_number}.fastq.gz</code> <p>See the Patterns documentation for more information on file patterns.</p>"},{"location":"read_formats/fastq/#read-batching","title":"Read Batching","text":"<p>The following batching options are used by default:</p> Option Value Duration <code>3600s</code> <p>For more information on batching see Batching.</p>"},{"location":"read_formats/fastq/#record-structure","title":"Record Structure","text":"<p>ONT fastq records contain a key value section after then required unique read id. This should be treated as an unordered set of values.</p> <p>The approximate structure of a record is:</p> <pre><code>@&lt;read-id&gt;(\\s&lt;key&gt;=&lt;value&gt;)*\nATCG...\n+\nQQQQ...\n</code></pre> <p>For example:</p> <pre><code>@bd8655fb-383c-45cc-bff3-eb1dc86533e0 key1=value1 key2=value2\nATCG\n+\nQQQQ\n</code></pre> <p>Attributes included in the key value section are listed below.</p>"},{"location":"read_formats/fastq/#required-header-attributes","title":"Required Header Attributes","text":"Regex <code>[0-9a-f]{40}</code> Required  Common fields <code>Bam: DS</code><code>Sequencing Summary: run_id</code> Examples <code>053d86cd5a212b3224c93df4d1e4f5f388b85a22</code> <p>A random-generated uuid for the sequencing protocol (eg: e4994c62-93f9-439a-bc8f-d20c95a137a5) This consists only of lower-case ASCII letters (a-z), digits (0-9) and dashes (-). This maps to the <code>protocol_run_id</code> in the pod5 file.</p> Regex <code>[0-9]+</code> Required  Common fields <code>Bam: ch</code><code>Sequencing Summary: channel</code> Examples <code>1</code> <code>512</code> <code>3000</code> <p>The number of the channel the read was acquired on. The first channel is 1.</p> Regex <code>((?:(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?))(Z|[\\+-]\\d{2}:\\d{2})?)</code> Required  Common fields <code>Bam: st</code><code>Sequencing Summary: start_time</code> Examples <code>2025-01-13T10:45:28.681306+00:00</code> <code>2016-01-19T15:21:32.59+02:00</code> <p>The time the read started in RFC3339 format.</p> Regex <code>[A-Z0-9-]+</code> Required  Common fields <code>Bam: PU</code><code>Sample Sheet: flow_cell_id</code> Examples <code>FXX12345</code> <code>PXX12345</code> <code>AAA123</code> <p>The human-readable identifier for the flow cell (eg: FAK54854).</p> Regex <code>[a-zA-Z0-9_\\.-]+</code> Required  Examples <code>My_Group</code> <code>my-group-1</code> <p>Set by the user in the GUI as \"Experiment ID\".</p> Regex <code>[a-zA-Z0-9_\\.-]+</code> Required  Common fields <code>Bam: LB</code><code>Sequencing Summary: sample_id</code><code>Sample Sheet: sample_id</code> Examples <code>My_Sample</code> <code>my-sample-1</code> <p>Set by the user in the GUI as \"Sample ID\".</p> Regex <code>unclassified|barcode([0-9]+)</code> Required  Only When <code>barcoding</code> Common fields <code>Bam: SM</code><code>Sequencing Summary: barcode_arrangement</code><code>Sample Sheet: barcode</code> Examples <code>unclassified</code> <code>barcode01</code> <p>The barcode assigned to this read by the basecaller (eg: <code>\"barcode01\"</code>). <code>unclassified</code> if no barcode was detected.</p> Regex <code>unclassified|[A-Za-z0-9\\-_\\.]+</code> Required  Only When <code>barcoding</code> Common fields <code>Bam: al</code><code>Sequencing Summary: alias</code><code>Sample Sheet: alias</code> Examples <code>my_sample</code> <code>sample01</code> <p>The user-supplied alias for the barcode. Empty if barcoding is not running. The same as <code>barcode</code> if the user did not supply an alias.</p> Regex <code>[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}</code> Required  Common fields <code>Bam: pi</code><code>Sequencing Summary: parent_read_id</code> Examples <code>e4994c62-93f9-439a-bc8f-d20c95a137a5</code> <p>The <code>read_id</code> of the read which was the source of this fastq entry. This may be the same as the fastq entry id if no read splitting was performed for this read, or will be a new globally unique UUID value if this read was split out of another read by guppy.</p> Regex <code>[a-z0-9_@\\.]+</code> Required  Common fields <code>Bam: DS</code> Examples <code>rna004_130bps_fast@v5.1.0</code> <p>The unique identifier for the basecall model used to generate this fastq file, as supplied by the guppy basecaller (e.g. <code>2021-05-17_dna_r9.4.1_minion_384_d37a2ab9</code>).</p> Regex <code>.*</code> Required  Only When <code>gpu_calling</code> Common fields <code>Bam: DS</code> Examples <code>Nvidia_3090</code> <p>A string description of the connected GPU.</p>"},{"location":"read_formats/fastq/#runid","title":"<code>runid</code>","text":""},{"location":"read_formats/fastq/#ch","title":"<code>ch</code>","text":""},{"location":"read_formats/fastq/#start_time","title":"<code>start_time</code>","text":""},{"location":"read_formats/fastq/#flow_cell_id","title":"<code>flow_cell_id</code>","text":""},{"location":"read_formats/fastq/#protocol_group_id","title":"<code>protocol_group_id</code>","text":""},{"location":"read_formats/fastq/#sample_id","title":"<code>sample_id</code>","text":""},{"location":"read_formats/fastq/#barcode","title":"<code>barcode</code>","text":""},{"location":"read_formats/fastq/#barcode_alias","title":"<code>barcode_alias</code>","text":""},{"location":"read_formats/fastq/#parent_read_id","title":"<code>parent_read_id</code>","text":""},{"location":"read_formats/fastq/#basecall_model_version_id","title":"<code>basecall_model_version_id</code>","text":""},{"location":"read_formats/fastq/#basecall_gpu","title":"<code>basecall_gpu</code>","text":""},{"location":"read_formats/fastq/#header-patterns","title":"Header Patterns","text":"<p>Additional header patterns are available for fastq files on top of the normal Patterns.</p> Name Value gpu_header_info A string description of the connected GPU (without spaces), with fastq attribute name. eg 'basecall_gpu=Nvidia_3090'"},{"location":"read_formats/pod5/","title":"Pod5 Outputs","text":"<p>Pod5 is the Nanopore's raw read format, based on Apache Arrow. Its specification is part of the  repository which implements the format. You can also find generated documentation for the format here.</p>"},{"location":"read_formats/pod5/#specification","title":"Specification","text":"<p>The Pod5 file format is documented here.</p>"},{"location":"read_formats/pod5/#paths","title":"Paths","text":"<p>The following path patterns are used to place the data on disk:</p> File Path Pattern Pod5 File <code>pod5{basecall_status}/{alias}/{flow_cell_id}{basecall_status}_{alias_}{short_protocol_run_id}_{short_run_id}_{batch_number}.pod5</code> <p>See the Patterns documentation for more information on file patterns.</p>"},{"location":"read_formats/pod5/#read-batching","title":"Read Batching","text":"<p>The following batching options are used by default:</p> Option Value Duration <code>3600s</code> Bases <code>500000000 Bases</code> <p>For more information on batching see Batching.</p>"},{"location":"read_formats/pod5/#minimum-version","title":"Minimum Version","text":"<p>The minimum version pod5 files are expected to be written is <code>0.3.18</code>.</p>"}]}